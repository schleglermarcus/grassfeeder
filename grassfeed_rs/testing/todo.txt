To Do List


- Flatpak  https://lib.rs/crates/cargo-pkg
- Change Layout: wide bottom line.
- Investigate why   subscriptions.db  is so large.
- Bug:  add-folder   leads to  expanding one that is closed
- Bug: Subscription-edit  text fields are vertically expanding. Shall be static in set_height_request
- Bug: Dialog Folder-edit shall show statistics information
- Bug messages:  set unread ->  is not processed in following set-reading
- Delete Messages by delete key
- Subscription Tree: hide zeroes when nothing to read
- Create Backups for Subscriptions-DB
- Sanitize: cross-check icon ids of tree if they are present in icon db
- refactor: gtk - separate file for the message list
- Message List: translate titles
- check  https://www.linuxcompatible.org/  feed: icon + entries


- Graphics:  scale down icons before going into database.  Example   http://feeds.feedburner.com/TechmemeRideHome
- Message List: set scroll position to upper edge from Cursor
- Subscriptions Sanitize:  Folder shall have only folder icon
- Subscriptions Sanitize:  test and clean with recursive folders
- import opml: see if we can get the web main url from  the outline
- Updating the tree: speed up the gtk part
- Startup, create gui:  delayed creation of dialogs
- Browser Display :  wrap over   title
- React on Minimize, do memory usage reduction
- implement focus policy: before last unread
- Opml export formatted / pretty
- Browser: enable theme related colors
- Browser: Modify  Font size
- Browser: add Zoom Control
- Possible Bug:  Mark-As-Read on Folder fails to process many subscriptions (>30)
- Reduce Size of Binary:
  https://lifthrasiir.github.io/rustlog/why-is-a-rust-executable-large.html

- Shutdown signal handling  https://docs.rs/signal-hook/latest/signal_hook/
- Searching inside messages
- Keybard configuration in settings
- DragAndDrop for Websites into Tree


Later:
- GTK4: block multiple instances
- process both sets of cmd parameters:   application   AND gtk, see runner_internal
	https://docs.gtk.org/gio/method.Application.run.html

- Windows  Build, Gui
  https://github.com/gabdube/native-windows-gui/tree/master/showcase
  https://www.ebbflow.io/blog/vending-win
	https://gtk-rs.org/gtk4-rs/git/book/installation_windows.html


Perhaps:
- Updating Sources:  prioritize by tree position, expanded flag
- Http download stream api,   falschzitate_blogspot.xml     http://falschzitate.blogspot.com/feeds/posts/default
- Feed-Import with progress bar ?
- Keyboard:  Delete on Subscription
- Read articles when offline ?
- Do extra format to  dig up invalid feed titles  containg  &     :      dieneuewelle.xml
- Grouping of feeds by folders ?
- RSS-Content damaged with    http://n8waechter.info/feed/


-----

* Get the branch and test it:
  git clone -b  v0_0_5  https://github.com/schleglermarcus/grassfeeder gf-v005


* Merge Branch and build release
    git checkout main
    git merge origin/v0_0_3
    git push origin main
		cd grassfeder_rs/app-gtk3-linux/ ; ./ docker-stage2.sh


* Put the work folder back to main
  git checkout main
  git pull
	git status

* Create new Branch

	git branch v0_0_4
	git checkout v0_0_4
  git push -u origin v0_0_4
  git branch --set-upstream-to=origin/v0_0_4 v0_0_4



-----
https://doc.rust-lang.org/cargo/reference/environment-variables.html

// https://www.debian.org/doc/manuals/maint-guide/dreq.en.html#changelog
// https://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog
// https://docs.rs/chrono/latest/chrono/format/strftime/index.html#specifiers
//  dpkg-deb -i 	grassfeeder.deb



https://github.com/marketplace/actions/rust-release-binary
https://mateuscosta.me/rust-releases-with-github-actions
https://daniellockyer.com/automated-rust-releases/


https://crates.io/crates/rustc_version/
https://lib.rs/crates/ci_info
https://www.gtk.org/docs/installations/windows/

Desktop:
https://nora.codes/tutorial/speedy-desktop-apps-with-gtk-and-rust/


------ AppImage
https://lib.rs/crates/cargo-appimage
https://appimage-builder.readthedocs.io/en/stable/intro/install.html
https://docs.appimage.org/packaging-guide/index.html
https://askubuntu.com/questions/1021420/glibc-2-25-not-found-on-ubuntu-windows-subsystem-for-linux
https://distrowatch.com/table.php?distribution=mint
https://docs.appimage.org/reference/best-practices.html#binaries-compiled-on-old-enough-base-system
## The ingredients used in your AppImage should not be built on a more recent base system than the oldest base system your AppImage is intended to run on.
## Install appimagetool AppImage
#sudo apt install -y python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse
#sudo wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /usr/local/bin/appimagetool
#sudo chmod +x /usr/local/bin/appimagetool






------ dylib
https://prog.world/building-and-using-dynamic-link-libraries-in-rust/
https://zicklag.github.io/rust-tutorials/rust-plugins.html
https://robert.kra.hn/posts/2022-09-09-speeding-up-incremental-rust-compilation-with-dylibs/
https://stackoverflow.com/questions/tagged/dynamic-library+rust
https://users.rust-lang.org/t/what-is-the-difference-between-dylib-and-cdylib/28847
https://doc.rust-lang.org/reference/linkage.html
https://stackoverflow.com/questions/44169635/rust-cargo-dylib-clarification



------ DOCKER
Docker:  3 Phasen:  aus,   build, run
	https://kerkour.com/rust-small-docker-image#/from-buster-slim
	https://windsoilder.github.io/writing_dockerfile_in_rust_project.html
https://middleware.io/blog/docker-cleanup/
# docker image prune
# docker  system prune


-------------------
GTK_DEBUG=interactive
	https://docs.gtk.org/gio/class.Application.html
	https://wiki.gnome.org/HowDoI/GtkApplication
	https://developer.gnome.org/documentation/tutorials/application.html
	https://docs.gtk.org/gio/method.Application.run.html

-------------------






cat /proc/1/smaps |grep -i pagesize  |sort -u
KernelPageSize:        4 kB


/proc/self/statm


https://www.kernel.org/doc/Documentation/filesystems/proc.txt

Table 1-3: Contents of the statm files (as of 2.6.8-rc3)
..............................................................................
 Field    Content
 size     total program size (pages)		(same as VmSize in status)
 resident size of memory portions (pages)	(same as VmRSS in status)
 shared   number of pages that are shared	(i.e. backed by a file, same
						as RssFile+RssShmem in status)
 trs      number of pages that are 'code'	(not including libs; broken,
							includes data segment)
 lrs      number of pages of library		(always 0 on 2.6)
 drs      number of pages of data/stack		(including libs; broken,
							includes library text)
 dt       number of dirty pages			(always 0 on 2.6)
..............................................................................
