To Do List
- Keyboard commands for:  mark-as-unread, next unread message

- Messages with Umlaut:  http://www.nachdenkseiten.de/?feed=atom


- see if  diylib  can be used for ui_gtk
- Menu Item and  Help text into browser
- Error-DB for Subscription Requests, display in edit dialog
- Create  AppImage
   https://github.com/StratusFearMe21/cargo-appimage
   https://lib.rs/crates/cargo-appimage


- Copy Message address into clipboard
- Create Backups for Subscriptions-DB
- check: subscription  Reload shall refresh  message list
- Possible Bug:  Mark-As-Read on Folder fails to process many subscriptions (>30)
- Messages missing in  https://afternarcissisticabuse.wordpress.com/feed/

- check  https://www.linuxcompatible.org/  feed: icon + entries
- Browser CleanUp Cache, on startup / finish
      webcontextext:  clear_cache(&self)

- Investigate why   subscriptions.db  is so large.

- Databases consistency check  on startup configurable.
- Sanitize: cross-check icon ids of tree if they are present in icon db
- Subscriptions Sanitize:  Folder shall have only folder icon
- Subscriptions Sanitize:  test and clean with recursive folders
- Sanitize: Message clean out those with deleted flag
- Flatpak  https://lib.rs/crates/cargo-pkg

- Startup, create gui:  delayed creation of dialogs
- Subscription Tree: hide zeroes when nothing to read
- refactor messages / separate state_map
- Browser Display :  wrap over   title
- React on Minimize, do memory usage reduction
- implement focus policy: before last unread
- Opml export formatted / pretty
- Browser: enable theme related colors
- Modify Browser Font size

- Reduce Size of Binary:
  https://lifthrasiir.github.io/rustlog/why-is-a-rust-executable-large.html
- DragAndDrop for Websites into Tree
- Shutdown signal handling  https://docs.rs/signal-hook/latest/signal_hook/
- Searching inside feeds
- Message List: set scroll position to upper edge from Cursor
- Keybard configuration in settings


Later:
- GTK4: block multiple instances
- process both sets of cmd parameters:   application   AND gtk, see runner_internal
	https://docs.gtk.org/gio/method.Application.run.html

- Windows  Build, Gui
  https://github.com/gabdube/native-windows-gui/tree/master/showcase
  https://www.ebbflow.io/blog/vending-win
	https://gtk-rs.org/gtk4-rs/git/book/installation_windows.html



Perhaps:
- Updating Sources:  prioritize by tree position, expanded flag
- Http download stream api,   falschzitate_blogspot.xml     http://falschzitate.blogspot.com/feeds/posts/default
- Feed-Import with progress bar ?
- Keyboard:  Delete on Subscription
- Read articles when offline ?
- Do extra format to  dig up invalid feed titles  containg  &     :      dieneuewelle.xml
- Grouping of feeds by folders ?
- RSS-Content damaged with    http://n8waechter.info/feed/


-----

* Get the branch and test it:
  git clone -b  v0_0_5  https://github.com/schleglermarcus/grassfeeder gf-v005


* Merge Branch and build release

    git checkout main
    git merge origin/v0_0_3
    git push origin main

		# (cd grassfeed_rs/app-gtk3-linux/ ; cargo clean;  rm Cargo.lock ; cargo test && nice -n9 cargo deb )


* Put the work folder back to main
  git checkout main
  git pull
	git status

* Create new Branch

	git branch v0_0_4
	git checkout v0_0_4
  git push -u origin v0_0_4
  git branch --set-upstream-to=origin/v0_0_4 v0_0_4



-----
https://doc.rust-lang.org/cargo/reference/environment-variables.html

// https://www.debian.org/doc/manuals/maint-guide/dreq.en.html#changelog
// https://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog
// https://docs.rs/chrono/latest/chrono/format/strftime/index.html#specifiers
//  dpkg-deb -i 	grassfeeder.deb



https://github.com/marketplace/actions/rust-release-binary
https://mateuscosta.me/rust-releases-with-github-actions
https://daniellockyer.com/automated-rust-releases/


https://crates.io/crates/rustc_version/
https://lib.rs/crates/ci_info
https://www.gtk.org/docs/installations/windows/

Desktop:
https://nora.codes/tutorial/speedy-desktop-apps-with-gtk-and-rust/


------
Docker:  3 Phasen:  aus,   build, run
	https://kerkour.com/rust-small-docker-image#/from-buster-slim
	https://windsoilder.github.io/writing_dockerfile_in_rust_project.html
https://middleware.io/blog/docker-cleanup/
# docker image prune
# docker  system prune


-------------------
	       GTK_DEBUG=interactive
	https://docs.gtk.org/gio/class.Application.html
	https://wiki.gnome.org/HowDoI/GtkApplication
	https://developer.gnome.org/documentation/tutorials/application.html
	https://docs.gtk.org/gio/method.Application.run.html



-------------------






cat /proc/1/smaps |grep -i pagesize  |sort -u
KernelPageSize:        4 kB


/proc/self/statm


https://www.kernel.org/doc/Documentation/filesystems/proc.txt

Table 1-3: Contents of the statm files (as of 2.6.8-rc3)
..............................................................................
 Field    Content
 size     total program size (pages)		(same as VmSize in status)
 resident size of memory portions (pages)	(same as VmRSS in status)
 shared   number of pages that are shared	(i.e. backed by a file, same
						as RssFile+RssShmem in status)
 trs      number of pages that are 'code'	(not including libs; broken,
							includes data segment)
 lrs      number of pages of library		(always 0 on 2.6)
 drs      number of pages of data/stack		(including libs; broken,
							includes library text)
 dt       number of dirty pages			(always 0 on 2.6)
..............................................................................
